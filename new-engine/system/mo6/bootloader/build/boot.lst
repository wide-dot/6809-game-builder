                      (C:\Users\bhrou\gi):00001         ;*******************************************************************************
                      (C:\Users\bhrou\gi):00002         ; FD Boot loader
                      (C:\Users\bhrou\gi):00003         ; Original code from Prehisto
                      (C:\Users\bhrou\gi):00004         ; Benoit Rousseau 07/2023 (memory ext. check)
                      (C:\Users\bhrou\gi):00005         ; ------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00006         ; A fully featured boot loader
                      (C:\Users\bhrou\gi):00007         ;*******************************************************************************
                      (C:\Users\bhrou\gi):00008         
                      (C:\Users\bhrou\gi):00009                 INCLUDE "new-engine/6809/types.const.asm"
                      (new-engine/6809/t):00001          IFNDEF types.const.asm
     0001             (new-engine/6809/t):00002         types.const.asm  equ 1
                      (new-engine/6809/t):00003         
     0001             (new-engine/6809/t):00004         types.BYTE      equ 1
     0008             (new-engine/6809/t):00005         types.BYTE_BITS equ 8*types.BYTE
     0002             (new-engine/6809/t):00006         types.WORD      equ 2*types.BYTE
     0010             (new-engine/6809/t):00007         types.WORD_BITS equ 8*types.WORD
                      (new-engine/6809/t):00008          ENDC
                      (C:\Users\bhrou\gi):00010                 INCLUDE "new-engine/system/mo6/map.const.asm"
                      (new-engine/system):00001         ;*******************************************************************************
                      (new-engine/system):00002         ; Thomson MO6 - Memory map
                      (new-engine/system):00003         
                      (new-engine/system):00004         ; ------------------------------------------------------------------------------
                      (new-engine/system):00005         ;
                      (new-engine/system):00006         ; system addresses
                      (new-engine/system):00007         ;*******************************************************************************
                      (new-engine/system):00008         
                      (new-engine/system):00009          IFNDEF map.const.asm
     0001             (new-engine/system):00010         map.const.asm equ 1
                      (new-engine/system):00011         
                      (new-engine/system):00012         ; mc6846
     A7C0             (new-engine/system):00013         map.MC6846.CSR      equ $A7C0
     A7C1             (new-engine/system):00014         map.MC6846.CRC      equ $A7C1
     A7C2             (new-engine/system):00015         map.MC6846.DDRC     equ $A7C2
     A7C3             (new-engine/system):00016         map.MC6846.PRC      equ $A7C3 ; (bit0) set half ram page 0 (low or high) in video area ($0000-$1FFF)
     A7C4             (new-engine/system):00017         map.MC6846.CSR2     equ $A7C4
                      (new-engine/system):00018         
                      (new-engine/system):00019         ; mc6821 system
     A7C8             (new-engine/system):00020         map.MC6821.PRA      equ $A7C8
     A7C9             (new-engine/system):00021         map.MC6821.PRB      equ $A7C9
     A7CA             (new-engine/system):00022         map.MC6821.CRA      equ $A7CA
     A7CB             (new-engine/system):00023         map.MC6821.CRB      equ $A7CB
                      (new-engine/system):00024         
                      (new-engine/system):00025         ; mc6821 music and game
     A7CC             (new-engine/system):00026         map.MC6821.PRA1     equ $A7CC
     A7CD             (new-engine/system):00027         map.MC6821.PRA2     equ $A7CD
     A7CE             (new-engine/system):00028         map.MC6821.CRA1     equ $A7CE
     A7CF             (new-engine/system):00029         map.MC6821.CRA2     equ $A7CF
                      (new-engine/system):00030         
                      (new-engine/system):00031         ; thmfc01 gate controler floppy disk
     A7D0             (new-engine/system):00032         map.THMFC01.STAT0   equ $A7D0
     A7D0             (new-engine/system):00033         map.THMFC01.CMD0    equ $A7D0
     A7D1             (new-engine/system):00034         map.THMFC01.STAT1   equ $A7D1
     A7D1             (new-engine/system):00035         map.THMFC01.CMD1    equ $A7D1
     A7D2             (new-engine/system):00036         map.THMFC01.CMD2    equ $A7D2
     A7D3             (new-engine/system):00037         map.THMFC01.WDATA   equ $A7D3
     A7D3             (new-engine/system):00038         map.THMFC01.RDATA   equ $A7D3
     A7D4             (new-engine/system):00039         map.THMFC01.WCLK    equ $A7D4
     A7D5             (new-engine/system):00040         map.THMFC01.WSECT   equ $A7D5
     A7D6             (new-engine/system):00041         map.THMFC01.TRCK    equ $A7D6
     A7D7             (new-engine/system):00042         map.THMFC01.CELL    equ $A7D7
                      (new-engine/system):00043         
                      (new-engine/system):00044         ; ef9369 palette
     A7DA             (new-engine/system):00045         map.EF9369.D        equ $A7DA
     A7DB             (new-engine/system):00046         map.EF9369.A        equ $A7DB
                      (new-engine/system):00047         
                      (new-engine/system):00048         ; cf74021 gate array page mode - (TO8D: EFG2021FN)
     A7DC             (new-engine/system):00049         map.CF74021.LGAMOD  equ $A7DC
     A7DD             (new-engine/system):00050         map.CF74021.SYS2    equ $A7DD ; (bit0-3) set screen border color, (bit6-7) set onscreen video memory page
     A7E4             (new-engine/system):00051         map.CF74021.COM     equ $A7E4
     A7E5             (new-engine/system):00052         map.CF74021.DATA    equ $A7E5 ; (bit0-4) set ram page in data area ($6000-$9FFF)
     A7E6             (new-engine/system):00053         map.CF74021.CART    equ $A7E6 ; (bit0-4) set page in cartridge area ($B000-$EFFF), (bit5) set ram over cartridge, (bit6) enable write
     A7E7             (new-engine/system):00054         map.CF74021.SYS1    equ $A7E7 ; (bit4) set ram over data area
                      (new-engine/system):00055         
                      (new-engine/system):00056         ; extension port
     00A7             (new-engine/system):00057         map.EXTPORT         equ $A7
     A7F0             (new-engine/system):00058         map.IEEE488         equ $A7F0 ; to A7F7
     A7F2             (new-engine/system):00059         map.EF5860.CTRL     equ $A7F2 ; MIDI
     A7F3             (new-engine/system):00060         map.EF5860.TX       equ $A7F3 ; MIDI
     A7FE             (new-engine/system):00061         map.MEA8000.D       equ $A7FE ; Vocal synth
     A7FF             (new-engine/system):00062         map.MEA8000.A       equ $A7FF ; Vocal synth
                      (new-engine/system):00063         
                      (new-engine/system):00064         ; ROM routines
     A004             (new-engine/system):00065         map.DKCONT          equ $A004 ; TO:DKCO, MO:SWI $26
     A007             (new-engine/system):00066         map.DKBOOT          equ $A007 ; boot
     A00A             (new-engine/system):00067         map.DKFMT           equ $A00A ; format
     A00D             (new-engine/system):00068         map.LECFA           equ $A00D ; read FAT
     A010             (new-engine/system):00069         map.RECFI           equ $A010 ; search file
     A010             (new-engine/system):00070         map.RECUP           equ $A010 ; clear file
     A010             (new-engine/system):00071         map.ECRSE           equ $A010 ; sector write
     A019             (new-engine/system):00072         map.ALLOD           equ $A019 ; catalog file allocation
     A01C             (new-engine/system):00073         map.ALLOB           equ $A01C ; bloc allocation
     A01F             (new-engine/system):00074         map.MAJCL           equ $A01F ; cluster update
     A022             (new-engine/system):00075         map.FINTR           equ $A022 ; transfert end
     A025             (new-engine/system):00076         map.QDDSTD          equ $A025 ; QDD std functions
     A028             (new-engine/system):00077         map.QDDSYS          equ $A028 ; QDD sys functions
                      (new-engine/system):00078         
     A803             (new-engine/system):00079         map.PUTC            equ $A803
     A806             (new-engine/system):00080         map.GETC            equ $A806
     A809             (new-engine/system):00081         map.KTST            equ $A809
     A82A             (new-engine/system):00082         map.DKCO            equ $A82A ; read or write floppy disk routine
                      (new-engine/system):00083         
                      (new-engine/system):00084         ; system monitor registers
     0020             (new-engine/system):00085         map.REG.DP          equ $20   ; direct page for system monitor registers
     2019             (new-engine/system):00086         map.STATUS          equ $2019 ; status bitfield
     2048             (new-engine/system):00087         map.DK.OPC          equ $2048 ; operation
     2049             (new-engine/system):00088         map.DK.DRV          equ $2049 ; drive
     204C             (new-engine/system):00089         map.DK.SEC          equ $204C ; sector
     204A             (new-engine/system):00090         map.DK.TRK          equ $204A ; $204B ; track
     204E             (new-engine/system):00091         map.DK.STA          equ $204E ; return status
     204F             (new-engine/system):00092         map.DK.BUF          equ $204F ; $2050 ; data write location
     2061             (new-engine/system):00093         map.TIMERPT         equ $2061 ; routine irq timer
     2063             (new-engine/system):00094         map.IRQSEMAPHORE    equ $2063 ; irq semaphore
     2064             (new-engine/system):00095         map.IRQPT           equ $2064 ; routine irq
     2067             (new-engine/system):00096         map.FIRQPT          equ $2067 ; routine firq
     2081             (new-engine/system):00097         map.CF74021.SYS1.R  equ $2081 ; reading value for map.CF74021.SYS1
                      (new-engine/system):00098         
                      (new-engine/system):00099         ; -----------------------------------------------------------------------------
                      (new-engine/system):00100         ; constants
                      (new-engine/system):00101         
     0035             (new-engine/system):00102         map.EF5860.TX_IRQ_ON  equ %00110101 ; 8bits, no parity check, stop 1, tx interrupt
     0015             (new-engine/system):00103         map.EF5860.TX_IRQ_OFF equ %00010101 ; 8bits, no parity check, stop 1, no interrupt
     0060             (new-engine/system):00104         map.RAM_OVER_CART     equ %01100000
     0080             (new-engine/system):00105         map.STATUS.MINUSCULE  equ %10000000
     0040             (new-engine/system):00106         map.STATUS.SCROLL     equ %01000000
     0020             (new-engine/system):00107         map.STATUS.QWERTY     equ %00100000
     0010             (new-engine/system):00108         map.STATUS.GFXFORM    equ %00010000
     0008             (new-engine/system):00109         map.STATUS.CUTBUZZER  equ %00001000
     0004             (new-engine/system):00110         map.STATUS.CURSOR     equ %00000100
     0002             (new-engine/system):00111         map.STATUS.KEYREPEAT  equ %00000010
     0001             (new-engine/system):00112         map.STATUS.KEYREAD    equ %00000001
                      (new-engine/system):00113         
                      (new-engine/system):00114         ; -----------------------------------------------------------------------------
                      (new-engine/system):00115         ; mapping to generic names
                      (new-engine/system):00116         
     A7CD             (new-engine/system):00117         map.DAC            equ map.MC6821.PRA2
     ????             (new-engine/system):00118         map.RND            equ map.MC6846.TMSB
                      (new-engine/system):00119             ENDC
                      (C:\Users\bhrou\gi):00011                 INCLUDE "new-engine/system/mo6/bootloader/loader.const.asm"
                      (new-engine/system):00001          IFNDEF loader.PAGE
0000                  (new-engine/system):00002         loader.PAGE equ 4
                      (new-engine/system):00003          ENDC
                      (new-engine/system):00004         
                      (new-engine/system):00005          IFNDEF loader.ADDRESS
0000                  (new-engine/system):00006         loader.ADDRESS equ $6000
                      (new-engine/system):00007          ENDC
                      (new-engine/system):00008         
                      (new-engine/system):00009          IFNDEF loader.DEFAULT_DYNAMIC_MEMORY_SIZE
0000                  (new-engine/system):00010         loader.DEFAULT_DYNAMIC_MEMORY_SIZE equ loader.ADDRESS-loader.memoryPool+$4000
                      (new-engine/system):00011          ENDC
                      (new-engine/system):00012         
                      (new-engine/system):00013          IFNDEF loader.DEFAULT_SCENE_DIR_ID
     0000             (new-engine/system):00014         loader.DEFAULT_SCENE_DIR_ID equ 0
                      (new-engine/system):00015          ENDC
                      (new-engine/system):00016         
                      (new-engine/system):00017          IFNDEF loader.DEFAULT_SCENE_FILE_ID
     0000             (new-engine/system):00018         loader.DEFAULT_SCENE_FILE_ID equ 0
                      (new-engine/system):00019          ENDC
                      (new-engine/system):00020         
                      (new-engine/system):00021          IFNDEF loader.DEFAULT_SCENE_EXEC_PAGE
     0005             (new-engine/system):00022         loader.DEFAULT_SCENE_EXEC_PAGE equ 5
                      (new-engine/system):00023          ENDC
                      (new-engine/system):00024         
                      (new-engine/system):00025          IFNDEF loader.DEFAULT_SCENE_EXEC_ADDR
     2100             (new-engine/system):00026         loader.DEFAULT_SCENE_EXEC_ADDR equ $2100
                      (new-engine/system):00027          ENDC
                      (C:\Users\bhrou\gi):00012         
                      (C:\Users\bhrou\gi):00013         ; Disk boot
                      (C:\Users\bhrou\gi):00014                 org    $2200
     20               (C:\Users\bhrou\gi):00015                 setdp  map.REG.DP
                      (C:\Users\bhrou\gi):00016         
                      (C:\Users\bhrou\gi):00017         ; Freeze interrupts
2200 1A50             (C:\Users\bhrou\gi):00018                 orcc  #$50
                      (C:\Users\bhrou\gi):00019         
                      (C:\Users\bhrou\gi):00020         ; Check computer type
2202 308C7C           (C:\Users\bhrou\gi):00021                 leax  <mess1,pcr          ; Error message
2205 8601             (C:\Users\bhrou\gi):00022                 lda   #$01                ; Load code
2207 B1FFF0           (C:\Users\bhrou\gi):00023                 cmpa  >$FFF0              ; Check machine code
220A 263C             (C:\Users\bhrou\gi):00024                 bne   err                 ; Error if not MO6
                      (C:\Users\bhrou\gi):00025         
                      (C:\Users\bhrou\gi):00026         ; Load loader sectors
                      (C:\Users\bhrou\gi):00027          IFGE loader.ADDRESS-$B000        ; Skip if not RAM over cartridge space
                      (C:\Users\bhrou\gi):00028                 ldb   #loader.PAGE        ; Load RAM page
                      (C:\Users\bhrou\gi):00029                 orb   #$60                ; Set RAM over cartridge space
                      (C:\Users\bhrou\gi):00030                 stb   >map.CF74021.CART   ; Switch RAM page
                      (C:\Users\bhrou\gi):00031          ELSE
                      (C:\Users\bhrou\gi):00032           IFGE loader.ADDRESS-$6000       ; Skip if not data space
220C 8610             (C:\Users\bhrou\gi):00033                 lda   #$10
220E 9A81             (C:\Users\bhrou\gi):00034                 ora   <map.CF74021.SYS1.R ; Set RAM
2210 9781             (C:\Users\bhrou\gi):00035                 sta   <map.CF74021.SYS1.R ; over data
2212 B7A7E7           (C:\Users\bhrou\gi):00036                 sta   >map.CF74021.SYS1   ; space
2215 C604             (C:\Users\bhrou\gi):00037                 ldb   #loader.PAGE        ; Load RAM page
2217 F7A7E5           (C:\Users\bhrou\gi):00038                 stb   >map.CF74021.DATA   ; Switch RAM page
                      (C:\Users\bhrou\gi):00039           ELSE
                      (C:\Users\bhrou\gi):00040            IFGE loader.ADDRESS-$2000      ; Skip if not resident space
                      (C:\Users\bhrou\gi):00041            ELSE
                      (C:\Users\bhrou\gi):00042                 ldb   #loader.PAGE        ; Load RAM page
                      (C:\Users\bhrou\gi):00043                 andb  #$01                ; Keep only half page A or B
                      (C:\Users\bhrou\gi):00044                 orb   >map.MC6846.PRC     ; Merge register value
                      (C:\Users\bhrou\gi):00045                 stb   >map.MC6846.PRC     ; Set desired half page in video space
                      (C:\Users\bhrou\gi):00046            ENDC
                      (C:\Users\bhrou\gi):00047           ENDC
                      (C:\Users\bhrou\gi):00048          ENDC
221A CC6000           (C:\Users\bhrou\gi):00049                 ldd   #loader.ADDRESS    ; Loading
221D DD4F             (C:\Users\bhrou\gi):00050                 std   <map.DK.BUF        ; address
                      (C:\Users\bhrou\gi):00051                 IFGT loader.ADDRESS-((loader.ADDRESS/256)*256)
                      (C:\Users\bhrou\gi):00052                 ERROR "loader.ADDRESS is expected to be a multiple of 256 bytes. Ex: $6000, $2100, ..."
                      (C:\Users\bhrou\gi):00053                 ENDC                     ; b register is always 0
221F D7FF             (C:\Users\bhrou\gi):00054                 stb   <$20ff             ; Cold reset
2221 8602             (C:\Users\bhrou\gi):00055                 lda   #$02               ; >read code
2223 DD48             (C:\Users\bhrou\gi):00056                 std   <map.DK.OPC        ; Read/Head 0
2225 CE22AF           (C:\Users\bhrou\gi):00057                 ldu   #blist             ; Interleave list
2228 8E2293           (C:\Users\bhrou\gi):00058                 ldx   #mess3             ; Error message
222B A6C5             (C:\Users\bhrou\gi):00059         boot2   lda   b,u                ; Get sector
222D 974C             (C:\Users\bhrou\gi):00060                 sta   <map.DK.SEC        ; number
222F BDA004           (C:\Users\bhrou\gi):00061                 jsr   >map.DKCONT        ; Load sector
2232 2405             (C:\Users\bhrou\gi):00062                 bcc   boot3              ; Skip if no error
2234 BDA004           (C:\Users\bhrou\gi):00063                 jsr   >map.DKCONT        ; Reload sector
2237 250F             (C:\Users\bhrou\gi):00064                 bcs   err                ; Skip if error
2239 0C4F             (C:\Users\bhrou\gi):00065         boot3   inc   <map.DK.BUF        ; Move sector ptr
223B 5C               (C:\Users\bhrou\gi):00066                 incb                     ; Sector+1
223C 7A2280           (C:\Users\bhrou\gi):00067                 dec   >secnbr            ; Next
223F 26EA             (C:\Users\bhrou\gi):00068                 bne   boot2              ; sector
2241 10CE5F00         (C:\Users\bhrou\gi):00069                 lds   #$5F00             ; Set system stack
2245 7E6000           (C:\Users\bhrou\gi):00070                 jmp   >loader.ADDRESS
                      (C:\Users\bhrou\gi):00071         
                      (C:\Users\bhrou\gi):00072         ; Display error message
2248 338C56           (C:\Users\bhrou\gi):00073         err     leau  <mess0,pcr         ; Location
224B 8D08             (C:\Users\bhrou\gi):00074                 bsr   err2               ; Display location
224D 3384             (C:\Users\bhrou\gi):00075                 leau  ,x                 ; Message pointer
224F 8D04             (C:\Users\bhrou\gi):00076                 bsr   err2               ; Display message
2251 20FE             (C:\Users\bhrou\gi):00077         err0    bra   err0               ; Infinite loop
                      (C:\Users\bhrou\gi):00078         
                      (C:\Users\bhrou\gi):00079         ; Display message
2253 8D06             (C:\Users\bhrou\gi):00080         err1    bsr   err3               ; Display char
2255 E6C0             (C:\Users\bhrou\gi):00081         err2    ldb   ,u+                ; Read char
2257 2AFA             (C:\Users\bhrou\gi):00082                 bpl   err1               ; Next if not last
2259 C47F             (C:\Users\bhrou\gi):00083                 andb  #$7f               ; Mask char
225B 1FB8             (C:\Users\bhrou\gi):00084         err3    tfr   dp,a               ; Read DP
225D 48               (C:\Users\bhrou\gi):00085                 asla                     ; Check if MO or TO
225E 102B85A1         (C:\Users\bhrou\gi):00086                 lbmi  map.PUTC           ; Display for TO - PUTC
2262 3F               (C:\Users\bhrou\gi):00087                 swi                      ; Display for MO
2263 82               (C:\Users\bhrou\gi):00088                 fcb   $82                ; Display for MO - PUTC parameter
                      (C:\Users\bhrou\gi):00089         
                      (C:\Users\bhrou\gi):00090                 IFGT *-$2278
                      (C:\Users\bhrou\gi):00091                 ERROR "boot code part 1 is too large !"
                      (C:\Users\bhrou\gi):00092                 ENDC
                      (C:\Users\bhrou\gi):00093         
2264 0000000000000000 (C:\Users\bhrou\gi):00094                 align $2278
     0000000000000000
     00000000
2278                  (C:\Users\bhrou\gi):00095         @magicNumber
2278 42415349433200   (C:\Users\bhrou\gi):00096                 fcn   "BASIC2"
227F 00               (C:\Users\bhrou\gi):00097                 fcb   $00                               ; checksum (set at build stage)
2280 0F               (C:\Users\bhrou\gi):00098         secnbr  fcb   (builder.lwasm.size.loader/256)+1 ; number of sectors to read
                      (C:\Users\bhrou\gi):00099         
                      (C:\Users\bhrou\gi):00100         ; Error messages
2281 4F6E6C7920666F72 (C:\Users\bhrou\gi):00101         mess1   fcs   "Only for MO6/PC128"
     204D4F362F504331
     32B8
2293 2020202020492F4F (C:\Users\bhrou\gi):00102         mess3   fcs   "     I/O|Error"
     7C4572726FF2
                      (C:\Users\bhrou\gi):00103         
                      (C:\Users\bhrou\gi):00104         ; Location message
22A1 1F2121           (C:\Users\bhrou\gi):00105         mess0   fcb   $1f,$21,$21
22A4 1F1113           (C:\Users\bhrou\gi):00106                 fcb   $1f,$11,$13        ; 3 lines (11-13)
22A7 1B47             (C:\Users\bhrou\gi):00107                 fcb   $1b,$47            ; font : white
22A9 1B51             (C:\Users\bhrou\gi):00108                 fcb   $1b,$51            ; background : red
22AB 0C               (C:\Users\bhrou\gi):00109                 fcb   $0c                ; cls
22AC 1F4CCB           (C:\Users\bhrou\gi):00110                 fcb   $1f,$4c,$4b+$80    ; locate for MO
                      (C:\Users\bhrou\gi):00111         
                      (C:\Users\bhrou\gi):00112         ; Interleave table
22AF 0F0D0B           (C:\Users\bhrou\gi):00113         blist   fcb   $0f,$0d,$0b        ; first value is omitted ($01 : boot sector)
22B2 09070503         (C:\Users\bhrou\gi):00114                 fcb   $09,$07,$05,$03
22B6 08060402         (C:\Users\bhrou\gi):00115                 fcb   $08,$06,$04,$02
22BA 100E0C0A         (C:\Users\bhrou\gi):00116                 fcb   $10,$0e,$0c,$0a
                      (C:\Users\bhrou\gi):00117         
                      (C:\Users\bhrou\gi):00118                 IFGT *-$2300
                      (C:\Users\bhrou\gi):00119                 ERROR "boot code part 2 is too large !"
                      (C:\Users\bhrou\gi):00120                 ENDC
